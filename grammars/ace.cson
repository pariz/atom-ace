fileTypes: [
  "ace"
]
name: "Ace"
patterns: [
  {
    begin: "^(\\s*)(javascript):$"
    beginCaptures:
      "2":
        name: "constant.language.name.javascript.filter.ace"
    end: "^(?!(\\1\\s)|\\s*$)"
    name: "text.javascript.filter. ace"
    patterns: [
      {
        include: "source.js"
      }
    ]
  }
  {
    begin: "^(\\s*)(coffee):$"
    beginCaptures:
      "2":
        name: "constant.language.name.coffeescript.filter.ace"
    end: "^(?!(\\1\\s)|\\s*$)"
    name: "text.coffeescript.filter.ace"
    patterns: [
      {
        include: "source.coffee"
      }
    ]
  }
  {
    begin: "^(\\s*)(markdown):$"
    beginCaptures:
      "2":
        name: "constant.language.name.markdown.filter.ace"
    end: "^(?!(\\1\\s)|\\s*$)"
    name: "text.markdown.filter.ace"
    patterns: [
      {
        include: "source.md"
      }
    ]
  }
  {
    captures:
      "1":
        name: "punctuation.definition.prolog.ace"
    match: "^(! )($|\\s.*)"
    name: "meta.prolog.ace"
  }
  {
    captures:
      "1":
        name: "punctuation.section.comment.ace"
    match: "^\\s*(//)\\s*\\S.*$\\n?"
    name: "comment.line.slash.ace"
  }
  {
    begin: "^(\\s*)(//)\\s*$"
    beginCaptures:
      "2":
        name: "punctuation.section.comment.ace"
    end: "^(?!\\1  )"
    name: "comment.block.ace"
    patterns: [
      {
        include: "text.ace"
      }
    ]
  }
  {
    begin: "^\\s*(?===|=|-|~)"
    end: "$"
    patterns: [
      {
        include: "#aceline"
      }
    ]
  }
  {
    include: "#inline-html-tag"
  }
  {
    include: "#normal-html-tag"
  }
  {
    include: "#embedded-ace"
  }
  {
    begin: "^\\s*([\\w.#_-]*[\\w]+)\\s*"
    captures:
      "0":
        name: "entity.name.tag.ace"
    end: "$|(?!\\.|#|\\{|\\[|=|-|~|/)"
    patterns: [
      {
        begin: "\\{(?=.*\\}|.*\\|\\s*$)"
        end: "\\}|$|^(?!.*\\|\\s*$)"
        name: "meta.section.attributes.ace"
        patterns: [
          {
            include: "source.ace.ace"
          }
          {
            include: "#continuation"
          }
        ]
      }
      {
        begin: "\\[(?=.*\\]|.*\\|\\s*$)"
        end: "\\]|$|^(?!.*\\|\\s*$)"
        name: "meta.section.object.ace"
        patterns: [
          {
            include: "source.ace.ace"
          }
          {
            include: "#continuation"
          }
        ]
      }
      {
        include: "#aceline"
      }
      {
        match: "/"
        name: "punctuation.terminator.tag.ace"
      }
    ]
  }
  {
    captures:
      "1":
        name: "meta.escape.ace"
    match: "^\\s*(\\\\.)"
  }
  {
    begin: "^\\s*(?=\\||')"
    end: "$"
    patterns: [
      {
        include: "#embedded-ace"
      }
      {
        include: "text.html.basic"
      }
    ]
  }
]
repository:
  aceline:
    begin: "=='|='|==|=|-"
    contentName: "source.ace.embedded.ace"
    end: "((do|\\{)( \\|[^|]+\\|)?)$|[^\\\\,]$"
    endCaptures:
      "1":
        name: "source.ace.embedded.html"
      "2":
        name: "keyword.control.ace.start-block"
    name: "meta.line.ace.ace"
    patterns: [
      {
        comment: "Hack to let ace comments work in this context properly"
        match: "#.*$"
        name: "comment.line.number-sign.ace"
      }
      {
        include: "#continuation"
      }
      {
        include: "source.ace.ace"
      }
    ]
  continuation:
    captures:
      "1":
        name: "punctuation.separator.continuation.ace"
    match: "([\\\\,])\\s*\\n"
  "delimited-ace-a":
    begin: "=\\("
    end: "\\)(?=( \\w|$))"
    name: "source.ace.embedded.ace"
    patterns: [
      {
        include: "source.ace.ace"
      }
    ]
  "delimited-ace-b":
    begin: "=\\["
    end: "\\](?=( \\w|$))"
    name: "source.ace.embedded.ace"
    patterns: [
      {
        include: "source.ace.ace"
      }
    ]
  "delimited-ace-c":
    begin: "=\\{"
    end: "\\}(?=( \\w|$))"
    name: "source.ace.embedded.ace"
    patterns: [
      {
        include: "source.ace.ace"
      }
    ]
  "embedded-ace":
    begin: "(?<!\\\\)#{"
    end: "}"
    name: "source.ace.embedded.html"
    patterns: [
      {
        include: "source.ace.ace"
      }
    ]
  entities:
    patterns: [
      {
        captures:
          "1":
            name: "punctuation.definition.entity.html"
          "3":
            name: "punctuation.definition.entity.html"
        match: "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)"
        name: "constant.character.entity.html"
      }
      {
        match: "&"
        name: "invalid.illegal.bad-ampersand.html"
      }
    ]
  "inline-html-tag":
    begin: "^(\\s*([\\w.#_-]+( [\\w.#_-]+=(\".*?\"))*: )*)([\\w.#_-]+( [\\w.#_-]+=(\".*?\"))*:)(?=\\s)"
    captures:
      "1":
        name: "entity.name.tag.ace"
      "2":
        name: "entity.name.tag.ace"
      "3":
        name: "entity.name.tag.ace"
      "4":
        name: "string.quoted.double.html"
      "5":
        name: "entity.name.tag.ace"
      "6":
        name: "entity.name.tag.ace"
      "7":
        name: "string.quoted.double.html"
    end: "$"
    patterns: [
      {
        include: "#normal-inline-html-tag"
      }
      {
        include: "#tag-stuff"
      }
    ]
  "interpolated-ace":
    begin: "=(?=\\b)"
    end: "\\s|\\w$"
    name: "source.ace.embedded.html"
  "normal-html-tag":
    begin: "([\\w.#_-]+=)"
    captures:
      "1":
        name: "entity.name.tag.ace"
    end: "$"
    patterns: [
      {
        include: "#tag-stuff"
      }
      {
        include: "#string-double-quoted"
      }
      {
        include: "#string-single-quoted"
      }
    ]
  "normal-inline-html-tag":
    begin: "([\\w.#_-]+)"
    captures:
      "1":
        name: "entity.name.tag.ace"
    end: "$"
    patterns: [
      {
        include: "#tag-stuff"
      }
    ]
  "string-double-quoted":
    begin: "\""
    beginCaptures:
      "0":
        name: "punctuation.definition.string.begin.html"
    contentName: "meta.toc-list.id.html"
    end: "\""
    endCaptures:
      "0":
        name: "punctuation.definition.string.end.html"
    name: "string.quoted.double.html"
    patterns: [
      {
        include: "#embedded-ace"
      }
      {
        include: "#entities"
      }
    ]
  "string-single-quoted":
    begin: "'"
    beginCaptures:
      "0":
        name: "punctuation.definition.string.begin.html"
    contentName: "meta.toc-list.id.html"
    end: "'"
    endCaptures:
      "0":
        name: "punctuation.definition.string.end.html"
    name: "string.quoted.single.html"
    patterns: [
      {
        include: "#embedded-ace"
      }
      {
        include: "#entities"
      }
    ]
  "tag-id-attribute":
    begin: "\\b(id)\\b\\s*(=)"
    captures:
      "1":
        name: "entity.other.attribute-name.id.html"
      "2":
        name: "punctuation.separator.key-value.html"
    end: "(?<='|\")"
    name: "meta.attribute-with-value.id.html"
    patterns: [
      {
        include: "#string-double-quoted"
      }
      {
        include: "#string-single-quoted"
      }
    ]
  "tag-stuff":
    patterns: [
      {
        include: "#inline-html-tag"
      }
      {
        include: "#normal-html-tag"
      }
      {
        include: "#tag-id-attribute"
      }
      {
        include: "#interpolated-ace"
      }
      {
        include: "#delimited-ace-a"
      }
      {
        include: "#delimited-ace-b"
      }
      {
        include: "#delimited-ace-c"
      }
      {
        include: "#aceline"
      }
      {
        include: "#embedded-ace"
      }
    ]
scopeName: "text.ace"
